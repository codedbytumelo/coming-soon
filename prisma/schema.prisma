// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  orders    Order[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProductType {
  COMPONENT
  TEMPLATE
  BLOCK
  MVP
}

enum ProductTier {
  FREE
  PREMIUM
}

enum ProductStatus {
  ACTIVE
  INACTIVE
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String
  type        ProductType
  tier        ProductTier
  price       Float       @default(0)
  status      ProductStatus @default(ACTIVE)
  technologies String      // JSON string of technologies used
  purpose     String      // Purpose of the product
  features    String      // JSON string of features
  imageUrl    String?
  downloadUrl String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  orderItems  OrderItem[]
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  email     String
  total     Float
  status    String      @default("pending")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  invoice   Invoice?
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int     @default(1)
  price     Float
  createdAt DateTime @default(now())
  
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Invoice {
  id          String   @id @default(cuid())
  orderId     String   @unique
  invoiceNumber String  @unique
  pdfUrl      String?
  createdAt   DateTime @default(now())
  
  order       Order    @relation(fields: [orderId], references: [id])
}